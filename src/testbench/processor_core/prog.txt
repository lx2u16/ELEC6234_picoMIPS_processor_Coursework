// picoMIPS program for affine transformation algorithm
// n = 8 bits, Isize = 9+n = 17 bits
// format: 3b opcode, 3b %d, 3b %s, 8b immediate or address
// 
//BINARY  ////////////HEX////////// ASSEMBLER /////////
00000000000000000  //00000//NOP
10000100000000000  //10800//IN %1, %0; //Input X1 from SW to %1
00000000000000000  //00000//NOP
10001000000000000  //11000//IN %2, %0; //Input Y1 from SW to %2
00000000000000000  //00000//NOP
11001100101100000  //19960//MULI %3, %1, 0.75; //%3 = X1*0.75
11010001001000000  //1A240//MULI %4, %2, 0.5;	//%4 = Y1*0.5	  
00101110000000000  //05C00//ADD  %3, %4;       //%3 = %3+%4
11010100111000000  //19AC0//MULI %5, %1, -0.5; //%5 = X1*(-0.5)
11011001001100000  //1B260//MULI %6, %2, 0.75;	//%6 = Y1*0.75	 
00110111000000000  //06E00//ADD  %5, %6;       //%5 = %5+%6
10101101100010100  //15B14//ADDI %3, %3, 20;   //%3 = %3+20 add coefficient B
10110110111101100  //16DEC//ADDI %5, %5, -20;  //%5 = %5-20 add coefficient B
00101100000000000  //05800//ADD  %3, %0;       //%3 = %3+%0 display the X2
00110100000000000  //06800//ADD  %5, %0;       //%5 = %5+%0 display the Y2
00000000000000000  //00000//NOP




